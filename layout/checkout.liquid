<!DOCTYPE html>
<html lang="{{ locale }}" dir="{{ direction }}" class="{{ checkout_html_classes }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0">
    <meta name="referrer" content="origin">

    <title>{{ page_title }}</title>

    {{ content_for_header }}
    
  	{{ 'checkout.scss.css' | asset_url | stylesheet_tag }}

    {{ checkout_stylesheets }}
    {{ checkout_scripts }}
  </head>
  <body>
    {{ skip_to_content_link }}
    {% comment %}
  	<div class="delivery-bar">
      <p class="delivery-content">
        Order Within The Next
        {% assign days = 1 | times: 86400 %}
        <span class="delivery-title">{{settings.delivery_title}}</span>
        <span class="delivery-content">{{settings.delivery_content_before}} <span class="countdown-timer" data-hours="14" data-minutes="30">0 hours, 00 minutes</span></span>
        for <span class="nl-mob">Next Day Delivery <i>(To Arrive {{ "now" | date: "%s" | plus: days | date: "%A, %d %B" }}</i>)</span>
      </p>
	</div>
    {% endcomment %}
    <header class="banner" data-header role="banner">
      <div class="wrap">
        {{ content_for_logo }}
      </div>
    </header>

    {{ order_summary_toggle }}
    <div class="content" data-content>
      <div class="wrap">
        <div class="main">
          <header class="main__header" role="banner">
            {{ content_for_logo }}
            {{ breadcrumb }}
            {{ alternative_payment_methods }}
          </header>
          <main class="main__content" role="main">
            {{ content_for_layout }}
          </main>
          <footer class="main__footer" role="contentinfo">
            {{ content_for_footer }}
          </footer>
        </div>
        <aside class="sidebar" role="complementary">
          <div class="sidebar__header">
            {{ content_for_logo }}
          </div>
          <div class="sidebar__content">
            {{ content_for_order_summary }}
          </div>
        </aside>
      </div>
    </div>

    {{ tracking_code }}
    
	{% comment %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>

      function deliveryCTA(parent) {
        $(parent).addClass('d-none');
      }
      function countdownTimer(output, parent, daily, paramFunction) {
          var output = $(output),
              targetHour = parseInt(output.attr('data-hours')),
              targetMinute = parseInt(output.attr('data-minutes'));

          //if not daily countdown, gather the target date.
          if (daily == false) {
              var targetMonth = parseInt(output.attr('data-month')),
                  targetDate = parseInt(output.attr('data-date')),
                  targetYear = parseInt(output.attr('data-year'));
          }

          const second = 1000,
              minute = second * 60,
              hour = minute * 60,
              day = hour * 24;

          //if daily, we set the time
          if (daily == true) {
              var countDown = new Date();
              countDown.setHours(targetHour, targetMinute, 0);
          } else {
              //if date, we define the target date

              //new Date(year, month, day, hours, minutes, seconds, milliseconds)
              var countDown = new Date(
                  targetYear,
                  targetMonth,
                  targetDate,
                  targetHour,
                  targetMinute,
                  00
              );
          }

          function pad(num) {
              return ('0' + parseInt(num)).substr(-2);
          }

          var x = setInterval(outputHTML, second);

          function outputHTML() {
              let now = new Date().getTime(),
                  distance = countDown - now;

              var remainingDays = pad(Math.floor(distance / day)),
                  remainingHours = pad(Math.floor((distance % day) / hour)),
                  remainingMinutes = pad((distance % hour) / minute),
                  remainingSeconds = pad((distance % minute) / second);

              if (daily == true) {
                  output.html(remainingHours + ' hours, ' + remainingMinutes + ' minutes');
              } else {
                  output.html(
                      "<span class='time-col'><span class='remaining days'>" +
                          remainingDays +
                          "</span><span class='time-label'>Days</span></span><span class='time-col'><span class='remaining hours'>" +
                          remainingHours +
                          "</span><span class='time-label'>Hrs</span></span><span class='time-col'><span class='remaining mins'>" +
                          remainingMinutes +
                          "</span><span class='time-label'>Mins</span></span><span class='time-col'><span class='remaining secs'>" +
                          remainingSeconds +
                          "</span><span class='time-label'>Secs</span></span>"
                  );
              }

              //if we're pasted the time or date, then...
              if (distance < 0) {
                  clearInterval(x);

                  if (typeof paramFunction == 'function') {
                      paramFunction(parent);
                  }
              } else {
                  $(parent).addClass('d-block');
              }
          }
      }


      countdownTimer('.delivery-bar .countdown-timer', '.delivery-bar', true, deliveryCTA);
    </script>
	{% endcomment %}
   <!--
    <script type="text/javascript">
//CONFIGURATION
var c2a_config = {
	active: true,
	showLogo: false,
	access_token: 'f4ee7-2b03f-fce91-0759f',
	position: 0, // 0 - new input field for search, 1 - uses address line 1 for search
	hideFields: 0, // 0 - do not hide address fields, 1 - hide address fields
	countrySelector: true,
	enabledCountries: [],
	countryLanguage: 'en',
	design: {
		mode: 1,
		ambient: 'light',
		accent: 'default'
	},
	texts: {
		country_button: 'Select Country',
		country_placeholder: 'Type here to search for a country',
		default_placeholder: 'Start with post/zip code or street',
		placeholder_country_overrides: {},
		generic_error: 'An error occured. Please enter your address manually',
		no_results: 'No results found',
		search_label: 'Address Search'
	},
	_enable_phone_validation: false, // Set to true if you want to use our phone validation service
	_enable_email_validation: false,
	excludeAreas: [],
	transliterate: false,
	beforePopulate: function(c2a, elements, address) {
        // Perform any action here with the available data.
        // For example, you may want to alter part of the address before the address fields are filled.
    },
	phone: {
		beforeCorrect: function(element, result) {
			// Perform any action here with the available data.
			// For example, you may want to modify part of the phone number before the field has been populated with the corrected phone number.
		}
	}
};
</script>
<script src="https://cc-cdn.com/generic/scripts/v1/cc_c2a.min.js" type="text/javascript"></script>
<script src="https://cc-cdn.com/shopify/scripts/v1/cc_c2a_shopify.js" type="text/javascript"></script>
   -->
  </body>
</html>
